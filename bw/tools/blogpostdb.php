<?phpnamespace BW\tools;class BlogPostDB {private $mydb;  public function __construct(Database $db) {           $this->mydb = $db->getConnection();  }        public static function filter($data){        $data = trim($data);                $data = htmlspecialchars($data);        return $data;    }       public function addPost (BlogPost $post) {             // echo "<pre>", print_r($user), "</pre>";         try{           $stmt = $this->mydb->prepare("insert into blog_posts"                   . "(posttitle, postdesc, posttext , postdate , postimage, postuserid, postisvisible, postreads)"                   . "values(:pposttitle, :ppostdesc, :pposttext, :ppostdate, :ppostimage, :ppostuserid, :ppostisvisible, :ppostreads)");                      $stmt->bindValue(":pposttitle",$post->posttitle);           $stmt->bindValue(":ppostdesc",$post->postdesc);           $stmt->bindValue(":pposttext",$post->posttext);           $stmt->bindValue(":ppostdate",$post->postdate);           $stmt->bindValue(":ppostimage",$post->postimage);           $stmt->bindValue(":ppostuserid",$post->postuserid);           $stmt->bindValue(":ppostisvisible",$post->postisvisible);           $stmt->bindValue(":ppostreads",$post->postreads);                        $result= $stmt->execute();           return $result;         }catch(PDOException $pe){             echo "<br /> error occurred " . $pe->getMessage();             return false;         }                 }            public function getAllPosts() {  try{          $stmt = $this->mydb->prepare("select * from blog_posts");        $stmt->execute();        $stmt->setFetchMode(\PDO::FETCH_ASSOC);                $blogpostslist = array();                while($row = $stmt->fetch()) {            $bpost = new BlogPost();            $bpost->postid = self::filter($row['postid']);            $bpost->posttitle = self::filter($row['posttitle']);            $bpost->postdesc = self::filter($row['postdesc']);            $bpost->posttext = self::filter($row['posttext']);            $bpost->postdate = date("l, d F  Y",self::filter($row['postdate']));            $bpost->postreads = self::filter($row['postreads']);            $bpost->postlikes = self::filter($row['postlikes']);            $bpost->postimage = self::filter($row['postimage']);            $bpost->postuserid = self::filter($row['postuserid']);            $bpost->postisvisible = self::filter($row['postisvisible']);                        $blogpostslist[] = $bpost;                    }                return $blogpostslist;                    }catch(\PDOException $pe) {         echo "<br /> Error occurred " . $pe->getMessage();    }}public function getPost($id) {      if(!isset($id)) return false;  try{          $stmt = $this->mydb->prepare("select * from blog_posts where postid = :postid");        $stmt->bindValue(":postid", $id);        $stmt->execute();      if(!$stmt->rowCount()) return false;        $stmt->setFetchMode(\PDO::FETCH_ASSOC);                $row = $stmt->fetch();            $bpost = new BlogPost();            $bpost->postid = self::filter($row['postid']);            $bpost->posttitle = self::filter($row['posttitle']);            $bpost->postdesc = self::filter($row['postdesc']);            $bpost->posttext = self::filter($row['posttext']);            $bpost->postdate = date("l, dS F Y",self::filter($row['postdate']));            $bpost->postreads = self::filter($row['postreads']);            $bpost->postlikes = self::filter($row['postlikes']);            $bpost->postimage = self::filter($row['postimage']);            $bpost->postuserid = self::filter($row['postuserid']);            $bpost->postisvisible = self::filter($row['postisvisible']);          return $bpost;              }catch(\PDOException $pe) {         echo "<br /> Error occurred " . $pe->getMessage();    }}public function getPostsByUser($username) {      if(!isset($username)) return false;  try{          $stmt = $this->mydb->prepare("select *  from blog_posts bp inner join blog_users bu on bp.postuserid = bu.userid"                . " where bu.username= :pusername");                                     $stmt->bindValue(":pusername", $username);        $stmt->execute();      if(!$stmt->rowCount()) return false;        $stmt->setFetchMode(\PDO::FETCH_ASSOC);           $blogpostslist = array();                while($row = $stmt->fetch()) {            $bpost = new BlogPost();            $bpost->postid = self::filter($row['postid']);            $bpost->posttitle = self::filter($row['posttitle']);            $bpost->postdesc = self::filter($row['postdesc']);            $bpost->posttext = self::filter($row['posttext']);            $bpost->postdate = date("D, dS M  Y",self::filter($row['postdate']));            $bpost->postreads = self::filter($row['postreads']);            $bpost->postlikes = self::filter($row['postlikes']);            $bpost->postimage = self::filter($row['postimage']);            $bpost->postuserid = self::filter($row['postuserid']);            $bpost->postisvisible = self::filter($row['postisvisible']);                        $blogpostslist[] = $bpost;                    }                return $blogpostslist;              }catch(\PDOException $pe) {         echo "<br /> Error occurred " . $pe->getMessage();    }}  public function updatePost (BlogPost $post) {           //   echo "<pre>", print_r($post), "</pre>";              // check to see if an image url has been set, then select an appropriate sql statement accordingly          try{        if(!empty($post->postimage)) {                 $sql = "update blog_posts "                   . "set posttitle = :pposttitle, postdesc = :ppostdesc, posttext = :pposttext, postdate = :ppostdate, "                   . "postimage =  :ppostimage, postuserid = :ppostuserid, postisvisible=:ppostisvisible "                   . " where postid = :ppostid";        } else {              $sql = "update blog_posts "                   . "set posttitle = :pposttitle, postdesc = :ppostdesc, posttext = :pposttext, postdate = :ppostdate, "                   . " postuserid = :ppostuserid, postisvisible=:ppostisvisible "                   . " where postid = :ppostid";        }                   $stmt = $this->mydb->prepare($sql);                                         $stmt->bindValue(":pposttitle",$post->posttitle);           $stmt->bindValue(":ppostdesc",$post->postdesc);           $stmt->bindValue(":pposttext",$post->posttext);           $stmt->bindValue(":ppostdate",$post->postdate);                      if(!empty($post->postimage)) {                 $stmt->bindValue(":ppostimage",$post->postimage);           }                      $stmt->bindValue(":ppostuserid",$post->postuserid);           $stmt->bindValue(":ppostisvisible",$post->postisvisible);                      $stmt->bindValue(":ppostid",$post->postid);                      $result= $stmt->execute();           return $result;         }catch(PDOException $pe){             echo "<br /> error occurred " . $pe->getMessage();             return false;         }                 }               public function getVisiblePosts() {  try{          $stmt = $this->mydb->prepare("select * from blog_posts where postisvisible=1 order by postdate desc");        $stmt->execute();        $stmt->setFetchMode(\PDO::FETCH_ASSOC);                $blogpostslist = array();                while($row = $stmt->fetch()) {            $bpost = new BlogPost();            $bpost->postid = self::filter($row['postid']);            $bpost->posttitle = self::filter($row['posttitle']);            $bpost->postdesc = self::filter($row['postdesc']);            $bpost->posttext = self::filter($row['posttext']);            $bpost->postdate = date("l, dS F Y",self::filter($row['postdate']));            $bpost->postreads = self::filter($row['postreads']);            $bpost->postlikes = self::filter($row['postlikes']);            $bpost->postimage = self::filter($row['postimage']);            $bpost->postuserid = self::filter($row['postuserid']);            $bpost->postisvisible = self::filter($row['postisvisible']);                        $blogpostslist[] = $bpost;                    }                return $blogpostslist;                    }catch(\PDOException $pe) {         echo "<br /> Error occurred " . $pe->getMessage();    }}public function updatePostRead($id){      if(!isset($id)) return false;          try{              $stmt = $this->mydb->prepare("update blog_posts set postreads = postreads + 1 where postid = :postid");                $stmt->bindValue(":postid", $id);                $result = $stmt->execute();        return $result;            } catch (PDOException $pe) {        echo "<br /> Error occurred " . $pe->getMessage();        return false;    }    }public function deletePost($id){      if(!isset($id)) return false;          try{              $stmt = $this->mydb->prepare("delete from blog_posts where postid = :postid");                $stmt->bindValue(":postid", $id);                $result = $stmt->execute();        return $result;            } catch (PDOException $pe) {        echo "<br /> Error occurred " . $pe->getMessage();        return false;    }    }    public function getPostsByText($searchtext = '') {  try{         $stmt = $this->mydb->prepare("select * from blog_posts where match(posttext) against (:psearchtext in boolean mode)");        $stmt->bindValue(":psearchtext", $searchtext);        $stmt->execute();        $stmt->setFetchMode(\PDO::FETCH_ASSOC);               $blogpostslist = array();                while($row = $stmt->fetch()) {            $bpost = new BlogPost();            $bpost->postid = self::filter($row['postid']);            $bpost->posttitle = self::filter($row['posttitle']);            $bpost->postdesc = self::filter($row['postdesc']);            $bpost->posttext = self::filter($row['posttext']);            $bpost->postdate = date("l, F d Y",self::filter($row['postdate']));            $bpost->postreads = self::filter($row['postreads']);            $bpost->postlikes = self::filter($row['postlikes']);            $bpost->postimage = self::filter($row['postimage']);            $bpost->postuserid = self::filter($row['postuserid']);            $bpost->postisvisible = self::filter($row['postisvisible']);                        $blogpostslist[] = $bpost;                    }                return $blogpostslist;    }catch(\PDOException $pe) {         echo "<br /> Error occurred " . $pe->getMessage();    }}}